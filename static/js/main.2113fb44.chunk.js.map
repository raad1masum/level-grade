{"version":3,"sources":["components/Home.tsx","App.tsx","index.tsx"],"names":["Home","useState","text","infoState","setInfoState","fleschkincaid","str","length","words","trim","split","wordCount","sentenceCount","syllableCount","word","toLowerCase","syllable","toString","grade","toFixed","className","style","color","placeholder","onChange","e","newValue","currentTarget","value","App","path","component","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAiEeA,G,MAxDF,WAAO,IAAD,EACmBC,mBAAe,CAC7CC,KAAM,KAFK,mBACRC,EADQ,KACGC,EADH,KAUTC,EAAgB,SAACC,GACnB,GAAmB,IAAfA,EAAIC,OACJ,MAAO,sCAEP,IAAIC,EAAkBF,EAAIG,OAAOC,MAAM,OACnCC,EAAoBH,EAAMD,OAC1BK,EAAwBN,EAAII,MAAM,MAAMH,OACxCM,EAAwB,EAE5B,IAAK,IAAIC,KAAQN,EACbM,EAAOA,EAAKC,cACZF,GAAiBG,IAASR,EAAMM,GAAMG,YAG1C,IAOMC,EAJiB,KAHHP,EAAYC,GAIb,MAHCC,EAAgBF,GAIjB,MAInB,OAAIO,EAAQ,GAEDA,EAAQ,GADR,eAIA,gBAAkBA,EAAMC,QAAQ,IAKnD,OACI,oCACI,yBAAKC,UAAW,aACZ,yBAAKA,UAAW,OACZ,2CACA,uBAAGC,MAAuC,iBAAhChB,EAAcF,EAAUD,MAAyB,CAACoB,MAAO,WAAW,CAACA,MAAM,YAAajB,EAAcF,EAAUD,OAC1H,8BAAUqB,YAAY,sCAAsCC,SA5C3D,SAACC,GACd,IAAMC,EAAWD,EAAEE,cAAcC,MACjCxB,EAAa,CAAEF,KAAMwB,YCEdG,EAZf,uKAEI,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW/B,UALrC,GAAyBgC,aCFzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2113fb44.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport syllable from \"syllable\"\n\nimport '../assets/css/main.css'\n\ninterface info {\n    text: String\n}\n\nconst Home = () => {\n    const [infoState, setInfoState] = useState<info>({\n        text: \"\",\n    })\n\n    const onchange = (e: any) => {\n        const newValue = e.currentTarget.value\n        setInfoState({ text: newValue })\n    }\n\n    const fleschkincaid = (str: String) => {\n        if (str.length === 0) {\n            return \"Enter Text to Calculate Grade Level\"\n        } else {\n            let words: String[] = str.trim().split(/\\s+/)\n            let wordCount: number = words.length\n            let sentenceCount: number = str.split(\". \").length\n            let syllableCount: number = 0\n\n            for (let word in words) {\n                word = word.toLowerCase()\n                syllableCount += syllable(words[word].toString())\n            }\n\n            const ASL: number = wordCount / sentenceCount\n            const ASW: number = syllableCount / wordCount\n\n            const sentenceWeight = 0.39\n            const wordWeight = 11.8\n            const adjustment = 15.59\n\n            const grade = (sentenceWeight * ASL) + (wordWeight * ASW) - adjustment\n\n            if (grade < 0) {\n                return \"Invalid Text\"\n            } else if (grade > 20) {\n                return \"Invalid Text\"\n            } else {\n                return \"Grade Level: \" + grade.toFixed(2)\n            }\n        }\n    }\n\n    return (\n        <>\n            <div className={\"container\"}>\n                <div className={\"top\"}>\n                    <h1>Level Grade</h1>\n                    <p style={fleschkincaid(infoState.text)===\"Invalid Text\" ? {color: \"#fd3c63\"}:{color:\"#ffffff\"}}>{fleschkincaid(infoState.text)}</p>\n                    <textarea placeholder=\"Enter Text to Calculate Grade Level\" onChange={onchange}></textarea>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={Home}></Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}